/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import {
    ComodityTradeHistory,
    ComodityTradeHistoryFromJSON,
    ComodityTradeHistoryFromJSONTyped,
    ComodityTradeHistoryToJSON,
} from './ComodityTradeHistory';
import {
    CryptoTradeHistory,
    CryptoTradeHistoryFromJSON,
    CryptoTradeHistoryFromJSONTyped,
    CryptoTradeHistoryToJSON,
} from './CryptoTradeHistory';
import {
    OtherInvestment,
    OtherInvestmentFromJSON,
    OtherInvestmentFromJSONTyped,
    OtherInvestmentToJSON,
} from './OtherInvestment';

/**
 * 
 * @export
 * @class CurrencySymbol
 */
export class CurrencySymbol {
    /**
     * 
     * @type {number}
     * @memberof CurrencySymbol
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CurrencySymbol
     */
    symbol?: string | null;
    /**
     * 
     * @type {Array<CryptoTradeHistory>}
     * @memberof CurrencySymbol
     */
    cryptoTradeHistory?: Array<CryptoTradeHistory> | null;
    /**
     * 
     * @type {Array<ComodityTradeHistory>}
     * @memberof CurrencySymbol
     */
    comodityTradeHistory?: Array<ComodityTradeHistory> | null;
    /**
     * 
     * @type {Array<OtherInvestment>}
     * @memberof CurrencySymbol
     */
    otherInvestments?: Array<OtherInvestment> | null;
}

export function CurrencySymbolFromJSON(json: any): CurrencySymbol {
    return CurrencySymbolFromJSONTyped(json, false);
}

export function CurrencySymbolFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencySymbol {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'cryptoTradeHistory': !exists(json, 'cryptoTradeHistory') ? undefined : (json['cryptoTradeHistory'] === null ? null : (json['cryptoTradeHistory'] as Array<any>).map(CryptoTradeHistoryFromJSON)),
        'comodityTradeHistory': !exists(json, 'comodityTradeHistory') ? undefined : (json['comodityTradeHistory'] === null ? null : (json['comodityTradeHistory'] as Array<any>).map(ComodityTradeHistoryFromJSON)),
        'otherInvestments': !exists(json, 'otherInvestments') ? undefined : (json['otherInvestments'] === null ? null : (json['otherInvestments'] as Array<any>).map(OtherInvestmentFromJSON)),
    };
}

export function CurrencySymbolToJSON(value?: CurrencySymbol | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'symbol': value.symbol,
        'cryptoTradeHistory': value.cryptoTradeHistory === undefined ? undefined : (value.cryptoTradeHistory === null ? null : (value.cryptoTradeHistory as Array<any>).map(CryptoTradeHistoryToJSON)),
        'comodityTradeHistory': value.comodityTradeHistory === undefined ? undefined : (value.comodityTradeHistory === null ? null : (value.comodityTradeHistory as Array<any>).map(ComodityTradeHistoryToJSON)),
        'otherInvestments': value.otherInvestments === undefined ? undefined : (value.otherInvestments === null ? null : (value.otherInvestments as Array<any>).map(OtherInvestmentToJSON)),
    };
}
