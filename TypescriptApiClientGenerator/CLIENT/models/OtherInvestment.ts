/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import {
    CurrencySymbol,
    CurrencySymbolFromJSON,
    CurrencySymbolFromJSONTyped,
    CurrencySymbolToJSON,
} from './CurrencySymbol';
import {
    OtherInvestmentBalaceHistory,
    OtherInvestmentBalaceHistoryFromJSON,
    OtherInvestmentBalaceHistoryFromJSONTyped,
    OtherInvestmentBalaceHistoryToJSON,
} from './OtherInvestmentBalaceHistory';
import {
    OtherInvestmentTag,
    OtherInvestmentTagFromJSON,
    OtherInvestmentTagFromJSONTyped,
    OtherInvestmentTagToJSON,
} from './OtherInvestmentTag';
import {
    UserIdentity,
    UserIdentityFromJSON,
    UserIdentityFromJSONTyped,
    UserIdentityToJSON,
} from './UserIdentity';

/**
 * 
 * @export
 * @class OtherInvestment
 */
export class OtherInvestment {
    /**
     * 
     * @type {number}
     * @memberof OtherInvestment
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof OtherInvestment
     */
    created?: Date;
    /**
     * 
     * @type {string}
     * @memberof OtherInvestment
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OtherInvestment
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof OtherInvestment
     */
    openingBalance?: number;
    /**
     * 
     * @type {number}
     * @memberof OtherInvestment
     */
    userIdentityId?: number;
    /**
     * 
     * @type {UserIdentity}
     * @memberof OtherInvestment
     */
    userIdentity?: UserIdentity;
    /**
     * 
     * @type {number}
     * @memberof OtherInvestment
     */
    currencySymbolId?: number;
    /**
     * 
     * @type {CurrencySymbol}
     * @memberof OtherInvestment
     */
    currencySymbol?: CurrencySymbol;
    /**
     * 
     * @type {Array<OtherInvestmentBalaceHistory>}
     * @memberof OtherInvestment
     */
    otherInvestmentBalaceHistory?: Array<OtherInvestmentBalaceHistory> | null;
    /**
     * 
     * @type {Array<OtherInvestmentTag>}
     * @memberof OtherInvestment
     */
    otherInvestmentTags?: Array<OtherInvestmentTag> | null;
}

export function OtherInvestmentFromJSON(json: any): OtherInvestment {
    return OtherInvestmentFromJSONTyped(json, false);
}

export function OtherInvestmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherInvestment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'code': !exists(json, 'code') ? undefined : json['code'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'openingBalance': !exists(json, 'openingBalance') ? undefined : json['openingBalance'],
        'userIdentityId': !exists(json, 'userIdentityId') ? undefined : json['userIdentityId'],
        'userIdentity': !exists(json, 'userIdentity') ? undefined : UserIdentityFromJSON(json['userIdentity']),
        'currencySymbolId': !exists(json, 'currencySymbolId') ? undefined : json['currencySymbolId'],
        'currencySymbol': !exists(json, 'currencySymbol') ? undefined : CurrencySymbolFromJSON(json['currencySymbol']),
        'otherInvestmentBalaceHistory': !exists(json, 'otherInvestmentBalaceHistory') ? undefined : (json['otherInvestmentBalaceHistory'] === null ? null : (json['otherInvestmentBalaceHistory'] as Array<any>).map(OtherInvestmentBalaceHistoryFromJSON)),
        'otherInvestmentTags': !exists(json, 'otherInvestmentTags') ? undefined : (json['otherInvestmentTags'] === null ? null : (json['otherInvestmentTags'] as Array<any>).map(OtherInvestmentTagFromJSON)),
    };
}

export function OtherInvestmentToJSON(value?: OtherInvestment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'code': value.code,
        'name': value.name,
        'openingBalance': value.openingBalance,
        'userIdentityId': value.userIdentityId,
        'userIdentity': UserIdentityToJSON(value.userIdentity),
        'currencySymbolId': value.currencySymbolId,
        'currencySymbol': CurrencySymbolToJSON(value.currencySymbol),
        'otherInvestmentBalaceHistory': value.otherInvestmentBalaceHistory === undefined ? undefined : (value.otherInvestmentBalaceHistory === null ? null : (value.otherInvestmentBalaceHistory as Array<any>).map(OtherInvestmentBalaceHistoryToJSON)),
        'otherInvestmentTags': value.otherInvestmentTags === undefined ? undefined : (value.otherInvestmentTags === null ? null : (value.otherInvestmentTags as Array<any>).map(OtherInvestmentTagToJSON)),
    };
}
