/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import {
    BrokerReportToProcess,
    BrokerReportToProcessFromJSON,
    BrokerReportToProcessFromJSONTyped,
    BrokerReportToProcessToJSON,
} from './BrokerReportToProcess';

/**
 * 
 * @export
 * @class BrokerReportToProcessState
 */
export class BrokerReportToProcessState {
    /**
     * 
     * @type {number}
     * @memberof BrokerReportToProcessState
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof BrokerReportToProcessState
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BrokerReportToProcessState
     */
    name?: string | null;
    /**
     * 
     * @type {Array<BrokerReportToProcess>}
     * @memberof BrokerReportToProcessState
     */
    brokerReportsToProcess?: Array<BrokerReportToProcess> | null;
}

export function BrokerReportToProcessStateFromJSON(json: any): BrokerReportToProcessState {
    return BrokerReportToProcessStateFromJSONTyped(json, false);
}

export function BrokerReportToProcessStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrokerReportToProcessState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'brokerReportsToProcess': !exists(json, 'brokerReportsToProcess') ? undefined : (json['brokerReportsToProcess'] === null ? null : (json['brokerReportsToProcess'] as Array<any>).map(BrokerReportToProcessFromJSON)),
    };
}

export function BrokerReportToProcessStateToJSON(value?: BrokerReportToProcessState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'name': value.name,
        'brokerReportsToProcess': value.brokerReportsToProcess === undefined ? undefined : (value.brokerReportsToProcess === null ? null : (value.brokerReportsToProcess as Array<any>).map(BrokerReportToProcessToJSON)),
    };
}
