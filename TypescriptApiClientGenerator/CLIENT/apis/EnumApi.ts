/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../runtime';
import {
    EnumItemModel,
    EnumItemModelFromJSON,
    EnumItemModelToJSON,
    EnumItemModelAdjusted,
    EnumItemModelAdjustedFromJSON,
    EnumItemModelAdjustedToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface V1EnumItemEnumItemCodeGetRequest {
    enumItemCode: string;
}

export interface V1EnumItemTypeEnumItemTypeCodeGetRequest {
    enumItemTypeCode: string;
}

/**
 * EnumApi - interface
 * 
 * @export
 * @interface EnumApiInterface
 */
export interface EnumApiInterface {
    /**
     * 
     * @param {string} enumItemCode 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnumApiInterface
     */
    v1EnumItemEnumItemCodeGetRaw(requestParameters: V1EnumItemEnumItemCodeGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<EnumItemModelAdjusted>>;

    /**
     */
    v1EnumItemEnumItemCodeGet(requestParameters: V1EnumItemEnumItemCodeGetRequest, initOverrides?: RequestInit): Promise<EnumItemModelAdjusted>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnumApiInterface
     */
    v1EnumItemGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<EnumItemModel>>>;

    /**
     */
    v1EnumItemGet(initOverrides?: RequestInit): Promise<Array<EnumItemModel>>;

    /**
     * 
     * @param {string} enumItemTypeCode 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnumApiInterface
     */
    v1EnumItemTypeEnumItemTypeCodeGetRaw(requestParameters: V1EnumItemTypeEnumItemTypeCodeGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<EnumItemModelAdjusted>>>;

    /**
     */
    v1EnumItemTypeEnumItemTypeCodeGet(requestParameters: V1EnumItemTypeEnumItemTypeCodeGetRequest, initOverrides?: RequestInit): Promise<Array<EnumItemModelAdjusted>>;

}

/**
 * 
 */
export class EnumApi extends runtime.BaseAPI implements EnumApiInterface {
    processPathParam(param: any): string {
        if (param instanceof Date)
            return encodeURIComponent(String(param.toISOString()));

        return encodeURIComponent(String(param));
    }

    /**
     */
    async v1EnumItemEnumItemCodeGetRaw(requestParameters: V1EnumItemEnumItemCodeGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<EnumItemModelAdjusted>> {
        if (requestParameters.enumItemCode === null || requestParameters.enumItemCode === undefined) {
            throw new runtime.RequiredError('enumItemCode','Required parameter requestParameters.enumItemCode was null or undefined when calling v1EnumItemEnumItemCodeGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/v1/enumItem/{enumItemCode}`.replace(`{${"enumItemCode"}}`, this.processPathParam(requestParameters.enumItemCode)),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EnumItemModelAdjustedFromJSON(jsonValue));
    }

    /**
     */
    async v1EnumItemEnumItemCodeGet(requestParameters: V1EnumItemEnumItemCodeGetRequest, initOverrides?: RequestInit): Promise<EnumItemModelAdjusted> {
        const response = await this.v1EnumItemEnumItemCodeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async v1EnumItemGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<EnumItemModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/v1/enumItem`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EnumItemModelFromJSON));
    }

    /**
     */
    async v1EnumItemGet(initOverrides?: RequestInit): Promise<Array<EnumItemModel>> {
        const response = await this.v1EnumItemGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async v1EnumItemTypeEnumItemTypeCodeGetRaw(requestParameters: V1EnumItemTypeEnumItemTypeCodeGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<EnumItemModelAdjusted>>> {
        if (requestParameters.enumItemTypeCode === null || requestParameters.enumItemTypeCode === undefined) {
            throw new runtime.RequiredError('enumItemTypeCode','Required parameter requestParameters.enumItemTypeCode was null or undefined when calling v1EnumItemTypeEnumItemTypeCodeGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/v1/enumItem/type/{enumItemTypeCode}`.replace(`{${"enumItemTypeCode"}}`, this.processPathParam(requestParameters.enumItemTypeCode)),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EnumItemModelAdjustedFromJSON));
    }

    /**
     */
    async v1EnumItemTypeEnumItemTypeCodeGet(requestParameters: V1EnumItemTypeEnumItemTypeCodeGetRequest, initOverrides?: RequestInit): Promise<Array<EnumItemModelAdjusted>> {
        const response = await this.v1EnumItemTypeEnumItemTypeCodeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
