/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import {
    CryptoTradeHistory,
    CryptoTradeHistoryFromJSON,
    CryptoTradeHistoryFromJSONTyped,
    CryptoTradeHistoryToJSON,
} from './CryptoTradeHistory';

/**
 * 
 * @export
 * @class CryptoTicker
 */
export class CryptoTicker {
    /**
     * 
     * @type {number}
     * @memberof CryptoTicker
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CryptoTicker
     */
    ticker?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CryptoTicker
     */
    name?: string | null;
    /**
     * 
     * @type {Array<CryptoTradeHistory>}
     * @memberof CryptoTicker
     */
    cryptoTradeHistories?: Array<CryptoTradeHistory> | null;
}

export function CryptoTickerFromJSON(json: any): CryptoTicker {
    return CryptoTickerFromJSONTyped(json, false);
}

export function CryptoTickerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CryptoTicker {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ticker': !exists(json, 'ticker') ? undefined : json['ticker'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'cryptoTradeHistories': !exists(json, 'cryptoTradeHistories') ? undefined : (json['cryptoTradeHistories'] === null ? null : (json['cryptoTradeHistories'] as Array<any>).map(CryptoTradeHistoryFromJSON)),
    };
}

export function CryptoTickerToJSON(value?: CryptoTicker | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ticker': value.ticker,
        'name': value.name,
        'cryptoTradeHistories': value.cryptoTradeHistories === undefined ? undefined : (value.cryptoTradeHistories === null ? null : (value.cryptoTradeHistories as Array<any>).map(CryptoTradeHistoryToJSON)),
    };
}
