/* tslint:disable */
/* eslint-disable */
/**
 * BudgetManager.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


 import * as runtime from '../../runtime';
import {
    TradeHistory,
    TradeHistoryFromJSON,
    TradeHistoryToJSON,
} from '../models';

/**
 * CurrencyApi - interface
 * 
 * @export
 * @interface CurrencyApiInterface
 */
export interface CurrencyApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CurrencyApiInterface
     */
    currencyAllGetRaw(): Promise<runtime.ApiResponse<Array<TradeHistory>>>;
    /**
     */
    currencyAllGet(): Promise<Array<TradeHistory>>;
}
/**
 * 
 */
export class CurrencyApi extends runtime.BaseAPI implements CurrencyApiInterface {
    processPathParam(param: any): string {
        if (param instanceof Date)
            return encodeURIComponent(String(param.toISOString()));

        return encodeURIComponent(String(param));
    }

    /**
     */
    async currencyAllGetRaw(): Promise<runtime.ApiResponse<Array<TradeHistory>>> {
        const queryParameters: runtime.HTTPQuery = {};
        const headerParameters: runtime.HTTPHeaders = {};
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }
        const response = await this.request({
            path: `/currency/all`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TradeHistoryFromJSON));
    }
    /**
     */
    async currencyAllGet(): Promise<Array<TradeHistory>> {
        const response = await this.currencyAllGetRaw();
        return await response.value();
    }
}
